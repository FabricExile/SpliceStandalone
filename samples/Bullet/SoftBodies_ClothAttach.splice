{
  "version": "1013000",
  "info": {
    "hostAppName": "Splice Standalone",
    "hostAppVersion": "1.0"
  },
  "nodes": [
    {
      "name": "DGNode",
      "dependencies": {},
      "bindings": [
        {
          "operator": {
            "name": "bulletOp",
            "entry": "bulletOp",
            "filename": "bulletOp.kl",
            "kl": "require InlineDrawing;\nrequire BulletHelpers;\n\nfunction Vec3 randomVec3(io Size offset, Scalar scale)\n{\n  const Size seed = 16841;\n  Vec3 p(\n    mathRandomFloat32(seed, offset++),\n    mathRandomFloat32(seed, offset++),\n    mathRandomFloat32(seed, offset++)\n    );\n  return p * scale;\n}\n\nfunction Init_ClothAttach(io SoftBodySimulation sim)\n{\n  sim.initPhysics();\n  BulletSoftRigidDynamicsWorld softWorld = sim.getSoftDynamicsWorld();\n  // create a cloth\n  PolygonMesh cloth();\n  const Scalar  s=4;\n  const Scalar  h=6;\n  const Integer r=9;\n  cloth.addPlane(Xfo(Vec3(0.0, h, 0.0)), s*2.0, s*2.0, r, r);\n  Vec3 positions[] = cloth.getAttributes().getPositions().values;\n  positions.resize(cloth.pointCount());\n  UInt32 triangles[] = cloth.generateTriangleList();\n  BulletSoftBody  psb=BulletSoftBodyHelpers_CreateFromTriMesh(sim.softBodyWorldInfo, positions, triangles, false);\n  // pin the corner points.\n  psb.setMass(positions.size-r-1,0);\n  psb.setMass(positions.size-1,0);\n  sim.addSoftBody(psb, cloth);\n  Vec3 boxDim = Vec3(s,1,3);\n  PolygonMesh cuboidMesh(); \n  cuboidMesh.addCuboid(Xfo(), boxDim.x * 2.0, boxDim.y * 2.0, boxDim.z * 2.0);\n  cuboidMesh.recomputePointNormals(0.2);\n\n  Xfo startTransform;\n  startTransform.setIdentity();\n  startTransform.tr = Vec3(0,h,-(s+3.5));\n  RigidBodyMesh   rbm=sim.addRigidBody(20,startTransform, BulletBoxShape(boxDim), cuboidMesh);\n  psb.appendAnchor(0,rbm.body);\n  psb.appendAnchor(r-1,rbm.body);\n  sim.setupDebugDrawing();\n}\n\noperator bulletOp(io DrawingHandle handle, io SoftBodySimulation sim, in Scalar time, in Scalar gravity)\n{\n  if(!sim.initialized){\n    Init_ClothAttach(sim);\n  }\n  \n  if(time <= 1.0){\n    sim.resetSimulation();\n    sim.dynamicsWorld.setGravity(Vec3(0,-gravity,0));\n  }\n  else{\n    sim.stepSimulation();\n  }\n}\n",
            "portmap": {}
          }
        }
      ]
    }
  ],
  "extensions": [
    "Bullet",
    "BulletHelpers"
  ],
  "ports": [
    {
      "name": "gravity",
      "node": "DGNode",
      "graph": "SoftBodies_ClothAttach",
      "type": "Scalar",
      "autoInitObjects": true,
      "member": "gravity",
      "mode": "io",
      "options": {
        "uiMax": 25,
        "uiMin": 0.001
      },
      "persistence": true,
      "default": "5"
    },
    {
      "name": "handle",
      "node": "DGNode",
      "graph": "SoftBodies_ClothAttach",
      "type": "DrawingHandle",
      "autoInitObjects": true,
      "member": "handle",
      "mode": "io",
      "persistence": false
    },
    {
      "name": "sim",
      "node": "DGNode",
      "graph": "SoftBodies_ClothAttach",
      "type": "SoftBodySimulation",
      "autoInitObjects": true,
      "member": "sim",
      "mode": "io",
      "persistence": false
    },
    {
      "name": "time",
      "node": "DGNode",
      "graph": "SoftBodies_ClothAttach",
      "type": "Scalar",
      "autoInitObjects": true,
      "member": "time",
      "mode": "in",
      "persistence": false
    }
  ]
}