{"version":"1012000","info":{"hostAppName":"Maya","hostAppVersion":"2014 x64"},"nodes":[{"name":"DGNode","members":[{"name":"forceRebuild","type":"Boolean","persistence":true,"default":"false"},{"name":"frequency","type":"Scalar","persistence":true,"default":"0.4517374634742737"},{"name":"lineLengths","type":"Scalar[]","persistence":true,"default":"[0.532421886920929,0.5014573335647583,0.5050033330917358,0.5080962181091309,0.5163743495941162,0.5224406123161316,0.5307401418685913,0.5297040343284607,0.5299084186553955,0.5369993448257446,0.5281331539154053,0.500682532787323,0.5119583606719971,0.5286966562271118,0.5050618648529053,0.5079152584075928,0.5080990791320801,0.5064864158630371,0.5135466456413269,0.5011763572692871,0.5455462336540222,0.5297132134437561,0.5247483253479004,0.5181306600570679,0.5081560015678406,0.5331119894981384,0.5039684772491455,0.5093335509300232,0.5114251971244812,0.5018085837364197,0.5356491804122925,0.513231098651886,0.5274912118911743,0.5463193655014038,0.5483732223510742,0.5311599373817444,0.5101322531700134,0.5275512337684631,0.5398640036582947,0.5023473501205444,0.5197669267654419,0.5318018198013306,0.5019855499267578,0.5289113521575928,0.5484545230865479,0.5457594394683838,0.545742392539978,0.5008603930473328,0.5448951125144959,0.531502902507782,0.5262799859046936,0.5210937261581421,0.539429247379303,0.5015016198158264,0.5178840160369873,0.5304010510444641,0.5190380215644836,0.5436158180236816,0.5389811396598816,0.5324628353118897,0.5023433566093445,0.5460960865020752,0.5271384716033936,0.5188501477241516,0.5146076679229736,0.5225839614868164,0.5140637159347534,0.544024646282196,0.512734055519104,0.5371112823486328,0.5006052851676941,0.5003385543823242,0.5102662444114685,0.5291007161140442,0.5317522287368774,0.5430349111557007,0.5023884773254395,0.5383654832839966,0.5216341614723206,0.5152471661567688,0.5409258008003235,0.5301094055175781,0.5285212993621826,0.5229995846748352,0.509343683719635,0.5199270248413086,0.5298246145248413,0.5102068185806274,0.5477484464645386,0.548803448677063,0.5470955967903137,0.533674418926239,0.5278868079185486,0.5081143379211426,0.5210263729095459,0.5380983948707581,0.5281462669372559,0.514626145362854,0.5364497303962708,0.5310654044151306,0.5085549354553223,0.5354957580566406,0.5473389625549316,0.5080527067184448,0.5357814431190491,0.513270914554596,0.501808226108551,0.5274282693862915,0.508135199546814,0.5408896803855896,0.5171120166778565,0.5354506373405457,0.5305660367012024,0.5366809964179993,0.5046457648277283,0.5412689447402954,0.5396646857261658,0.5193644165992737,0.5449451804161072,0.5419230461120606,0.5286622047424316,0.5330499410629273,0.5126869082450867,0.5473433136940002,0.5224304795265198,0.5222383141517639,0.5016880035400391,0.5053507685661316,0.502481997013092,0.5068209171295166,0.5499062538146973,0.5266571640968323,0.5319697856903076,0.5070797801017761,0.51444011926651,0.5098646879196167,0.5306875109672546,0.5186874270439148,0.5465285181999207,0.5164663791656494,0.5000696182250977,0.5377070903778076,0.51655113697052,0.5458456873893738,0.5481909513473511,0.5355927348136902,0.5390282273292542,0.5102768540382385,0.5147671103477478,0.5341887474060059,0.5476206541061401,0.5099246501922607,0.5461543202400208,0.5307302474975586,0.5201299786567688,0.5078444480895996,0.5203494429588318,0.5228430032730103,0.5034983158111572,0.5049822926521301,0.5219898223876953,0.5335432887077332,0.5388084053993225,0.515174925327301,0.5173535943031311,0.5362381935119629,0.5362836718559265,0.5401496291160584,0.5293594598770142,0.5297252535820007,0.5002881288528442,0.5445243120193481,0.5125668048858643,0.5131927728652954,0.5043264031410217,0.5308074355125427,0.5281754732131958,0.5112195014953613,0.5160437226295471,0.5143982768058777,0.5190261006355286,0.5487750172615051,0.5222260355949402,0.5485866069793701,0.5345998406410217,0.526219367980957,0.5037998557090759,0.549552857875824,0.5060185790061951,0.5443033576011658,0.5108323097229004,0.5213680267333984,0.5210447311401367,0.5291682481765747,0.5375310778617859,0.5309937596321106,0.5490814447402954,0.5073460936546326,0.547244668006897,0.533282458782196,0.5161722898483276,0.5307594537734985,0.5474620461463928,0.5459769368171692,0.530001699924469,0.5017216205596924,0.5148128271102905,0.5247108340263367,0.5048946142196655,0.5479363799095154,0.5200673341751099,0.5380082726478577,0.5368165373802185,0.5474982857704163,0.5031363964080811,0.5422840118408203,0.5283737182617188,0.5038923621177673,0.548071563243866,0.5068435072898865,0.5138130187988281,0.5209944248199463,0.5080649256706238,0.538882851600647,0.53402179479599,0.5280708074569702,0.5304493308067322,0.5084885954856873,0.5115282535552979,0.5047784447669983,0.5316981077194214,0.5236381888389587,0.525501012802124,0.5061650276184082,0.5224252939224243,0.5051994323730469,0.5367493629455566,0.5376687049865723,0.5323854684829712,0.5119308829307556,0.5127233266830444,0.5301183462142944,0.5354740023612976,0.51548171043396,0.5025134682655335,0.5147334933280945,0.5247266888618469,0.5253918170928955,0.5118509531021118,0.5481241941452026,0.537320077419281,0.5140914916992188,0.5281076431274414,0.5372912287712097,0.5295712947845459,0.5419018268585205,0.5452960133552551,0.5146259665489197,0.5019381046295166,0.5320345163345337,0.5390690565109253,0.5129103064537048,0.5240189433097839,0.5455917716026306,0.5417205691337585,0.5403168797492981,0.5095527768135071,0.5065666437149048,0.5171847939491272,0.5054090023040772,0.541419267654419,0.5268425345420837,0.5360367298126221,0.5421404242515564,0.5466386675834656,0.531193733215332,0.5004919171333313,0.5348556637763977,0.5213718414306641,0.5322849750518799,0.5194065570831299,0.5432898998260498,0.5059203505516052,0.5056717395782471,0.5332775712013245,0.5275687575340271,0.509726345539093,0.514799952507019,0.5392423272132874,0.5232086777687073,0.5363724827766419,0.5360063910484314,0.5160788893699646,0.5161165595054627,0.5085822343826294,0.5335183143615723,0.5492059588432312,0.5175901055335999,0.5432196259498596,0.5344536304473877,0.5056829452514648,0.5393174886703491,0.5262892842292786,0.5038208961486816,0.5092096924781799,0.5183775424957275,0.5379364490509033,0.5195192694664002,0.5151268243789673,0.5422398447990418,0.527446985244751,0.547338604927063,0.5354155898094177,0.5237643718719482,0.5382474660873413,0.5159592032432556,0.5136977434158325,0.5262019634246826,0.5329050421714783,0.5419522523880005,0.5002357363700867,0.5381940007209778,0.5181273818016052,0.5047793388366699,0.5269326567649841,0.5487723350524902,0.5197629928588867,0.5217927098274231,0.5323322415351868,0.5223596692085266,0.5078007578849793,0.5232353806495667,0.5366188287734985,0.5237691998481751,0.5213704705238342,0.5272408723831177,0.5166172981262207,0.5432047843933106,0.5437422394752502,0.5148333311080933,0.5307932496070862,0.5212609171867371,0.5273270606994629,0.5049275755882263,0.5442529320716858,0.5239227414131165,0.5186764001846314,0.5293290019035339,0.5037431120872498,0.5175659656524658,0.5334824323654175,0.5077337026596069,0.512651264667511,0.5439568758010864,0.5315778851509094,0.5227282643318176,0.5060054659843445,0.5452525615692139,0.5419361591339111,0.5447900295257568,0.5254744291305542,0.5390005111694336,0.5376712083816528,0.5072869658470154,0.5443674325942993,0.5431391000747681,0.5110378265380859,0.5314775109291077,0.5426344871520996,0.5009971261024475,0.5484310984611511,0.5015109181404114,0.531866192817688,0.5062940120697022,0.5053870677947998,0.5394269824028015,0.5302936434745789,0.5281399488449097,0.5315821170806885,0.5301560759544373,0.5377887487411499,0.5360355973243713,0.5458334684371948,0.5465192794799805,0.5108639001846314,0.524872362613678,0.5110988616943359,0.5242282152175903,0.5376722812652588,0.5399321913719177,0.5094767212867737,0.5368852615356445,0.5130074620246887,0.5018877983093262,0.5172060132026672,0.5209832787513733,0.513303816318512,0.531802237033844,0.5296663641929627,0.5009058117866516,0.5216363668441773,0.5261294841766357,0.536378026008606,0.5139270424842835,0.5027205944061279,0.5317140221595764,0.5460019707679749,0.5352118015289307,0.5279127359390259,0.5207909345626831,0.5113396644592285,0.5028154253959656,0.5002096295356751,0.5159859657287598,0.5043332576751709,0.542684018611908,0.5292487144470215,0.5153154134750366,0.5410654544830322,0.5436542630195618,0.5063080191612244,0.5171863436698914,0.5067597627639771,0.5324534177780151,0.5293063521385193,0.5453963279724121,0.5307800769805908,0.5486993789672852,0.5278029441833496,0.5241336226463318,0.5116310715675354,0.5199007391929627,0.537997841835022,0.5029770135879517,0.5419580340385437,0.5364567041397095,0.5277314782142639,0.5318960547447205,0.5335468649864197,0.526656985282898,0.5214852094650269,0.5362508296966553,0.5423240065574646,0.531682014465332,0.5253807306289673,0.5417920351028442,0.5433566570281982,0.5306029319763184,0.5021805763244629,0.5496610999107361,0.5058525800704956,0.5153812766075134,0.5462878346443176,0.511389970779419,0.5181601643562317,0.5158693790435791,0.5087461471557617,0.5039012432098389,0.5127684473991394,0.524810254573822,0.5222398638725281,0.5045081377029419,0.5413069725036621,0.5228373408317566,0.5260939002037048,0.5159145593643189,0.5495460629463196,0.5034748315811157,0.5412738919258118,0.5412150025367737,0.5023966431617737,0.5481375455856323,0.545386016368866,0.5088945031166077,0.5089101791381836,0.5011309385299683,0.5476770997047424,0.5478288531303406,0.5472788214683533,0.5446509718894959,0.514034628868103,0.5122843384742737,0.5398352742195129,0.523784339427948,0.5419865846633911,0.5069180130958557,0.5280530452728272,0.5215083360671997,0.5357017517089844,0.5117774605751038,0.5475460886955261,0.5336909294128418,0.5309894680976868,0.5073009133338928,0.5030690431594849,0.5440905690193176,0.5202996134757996,0.5493172407150269,0.5435171723365784,0.5493565201759338,0.5277227759361267,0.5440459251403809,0.5369263291358948,0.5340285897254944,0.533990204334259,0.523097038269043,0.5454730987548828,0.5455370545387268,0.5014737248420715,0.518471360206604,0.5004745721817017,0.5192031264305115,0.5491857528686523,0.5375601649284363,0.5273885726928711,0.5032383799552918,0.5277793407440186,0.5381455421447754,0.5208134055137634,0.5337451696395874,0.5445482730865479,0.5034000873565674,0.5194880962371826,0.5097163319587708,0.5384268164634705,0.5168869495391846,0.5312923192977905,0.5180354714393616,0.5049899220466614,0.537559986114502,0.5082463026046753,0.508476734161377,0.5214532017707825,0.524763822555542,0.5215110182762146,0.5187049508094788,0.521672785282135,0.5132334232330322,0.5363878607749939,0.5492755174636841,0.5211455821990967,0.5380945801734924,0.5373190641403198,0.5386344790458679,0.5420089960098267,0.5098636150360107,0.5028873682022095,0.5381184816360474,0.5380411148071289,0.539447546005249,0.5308161377906799,0.5369548797607422,0.5196606516838074,0.5131439566612244,0.5129693746566773,0.5372615456581116,0.5289269089698792,0.5176411271095276,0.5103517770767212,0.5290470123291016,0.5145398378372192,0.5150178670883179,0.528108537197113,0.5152105093002319,0.5068400502204895,0.5177436470985413,0.5405256152153015,0.536541759967804,0.5428087115287781,0.5136786103248596,0.5160294771194458,0.5467212200164795,0.5410677194595337,0.5410735011100769,0.5421872138977051,0.5373199582099915,0.5268793702125549,0.5135696530342102,0.5007067322731018,0.5127996206283569,0.5071468949317932,0.5451989769935608,0.5424363017082214,0.5155124664306641,0.5454139113426209,0.525384247303009,0.5123649835586548,0.5007014870643616,0.5368647575378418,0.5439385175704956,0.52462238073349,0.5115001797676086,0.5333244204521179,0.516065776348114,0.5374788045883179,0.5039327740669251,0.5182584524154663,0.5073604583740234,0.5283451080322266,0.5219139456748962,0.5317730307579041,0.5088076591491699,0.5187728404998779,0.5222492218017578,0.545615017414093,0.5117831230163574,0.5494540929794312,0.5496346354484558,0.5381718873977661,0.5330532193183899,0.5052216649055481,0.5116567611694336,0.5194716453552246,0.5397748947143555,0.5400488972663879,0.5037930011749268,0.5061830282211304,0.5244958400726318,0.5020498633384705,0.5344112515449524,0.5466153621673584,0.5301541686058044,0.5084791779518127,0.5497700572013855,0.5457186102867127,0.5250788331031799,0.5207321047782898,0.5090185403823853,0.5400833487510681,0.5279892683029175,0.5193445682525635,0.5091965794563294,0.5229406952857971,0.5329955816268921,0.5289930105209351,0.5102344751358032,0.519162654876709,0.5345984697341919,0.5434945821762085,0.5099533796310425,0.5102614760398865,0.5026894211769104,0.5008071064949036,0.5190649628639221,0.5093903541564941,0.5075502991676331,0.5080289244651794,0.5361714363098145,0.5363430380821228,0.5448537468910217,0.516399085521698,0.5227658152580261,0.542553722858429,0.5106630325317383,0.5462971925735474,0.5282315611839294,0.5360974073410034,0.5264319181442261,0.5122435092926025,0.5148428678512573,0.5066896677017212,0.5140050053596497,0.5478989481925964,0.5327645540237427,0.5006867647171021,0.5206173062324524,0.5310649871826172,0.5450520515441895,0.5460854768753052,0.5438945889472961,0.5086838006973267,0.5026513338088989,0.5275232195854187,0.5068532228469849,0.5218381285667419,0.5193991661071777,0.5112780928611755,0.5329001545906067,0.5307514071464539,0.5470227599143982,0.5202688574790955,0.5208330154418945,0.5397875905036926,0.5001400709152222,0.5090547800064087,0.5198400616645813,0.5224513411521912,0.5312596559524536,0.5388358235359192,0.5045000910758972,0.5463879704475403,0.5057806968688965,0.502452552318573,0.5497826933860779,0.5483832359313965,0.5269929766654968,0.549386203289032,0.5060478448867798,0.5093637704849243,0.5110768675804138,0.5107585191726685,0.5240463614463806,0.5293967127799988,0.5121034383773804,0.5243320465087891,0.5299195647239685,0.5026897192001343,0.5470343828201294,0.5095098614692688,0.5001994371414185,0.5425913333892822,0.520721971988678,0.542335569858551,0.5368086099624634,0.5065904259681702,0.500909149646759,0.5304936170578003,0.5420603156089783,0.5213167071342468,0.5432294607162476,0.53830885887146,0.5436583757400513,0.5075404644012451,0.5162070989608765,0.511746883392334,0.519697368144989,0.5051724910736084,0.5262567400932312,0.5034139752388001,0.523662269115448,0.5482643842697144,0.5426839590072632,0.5475568771362305,0.509428858757019,0.5400082468986511,0.5226846933364868,0.5350630283355713,0.5062634944915772,0.5277369022369385,0.5363456606864929,0.5384606122970581,0.5438232421875,0.5279236435890198,0.5416440963745117,0.5369181632995606,0.5271555781364441,0.5011825561523438,0.5094480514526367,0.54124516248703,0.5116987824440002,0.5272682309150696,0.5485159158706665,0.5188915133476257,0.5282817482948303,0.5300759673118591,0.5304969549179077,0.5189477801322937,0.5081239938735962,0.5026416778564453,0.5149309635162354,0.5471451282501221,0.5078355073928833,0.5321418046951294,0.5242483019828796,0.5408554077148438,0.5344170331954956,0.5248935222625732,0.5187700986862183,0.5440911054611206,0.5202600359916687,0.5313546061515808,0.5217078924179077,0.5325052738189697,0.5481464266777039,0.5211234092712402,0.5441641211509705,0.538391649723053,0.5262488722801209,0.5079389810562134,0.5101316571235657,0.5256844758987427,0.5131304860115051,0.5246809720993042,0.5314940214157105,0.5149587988853455,0.5427452325820923,0.5483695864677429,0.5330253839492798,0.5084301233291626,0.5494375824928284,0.5251657962799072,0.5273905396461487,0.5149546265602112,0.5429425835609436,0.5453709959983826,0.5401449203491211,0.5250292420387268,0.5333859920501709,0.5184274315834045,0.5347346067428589,0.5357913374900818,0.5062841773033142,0.5479178428649902,0.5374962091445923,0.5260190367698669,0.5475441217422485,0.5065656304359436,0.5126570463180542,0.5311309695243835,0.5184634923934937,0.5112347602844238,0.5373350381851196,0.5181865692138672,0.5307304263114929,0.5479298830032349,0.5265387296676636,0.5108856558799744,0.5214237570762634,0.5467962622642517,0.5081673264503479,0.5145689249038696,0.5280131101608276,0.5071198344230652,0.548010528087616,0.5412175059318543,0.513358473777771,0.5223270654678345,0.5247488617897034,0.534453272819519,0.5407106280326843,0.5049850940704346,0.5049533247947693,0.544538676738739,0.5487108826637268,0.5118016600608826,0.5180855393409729,0.5033767223358154,0.526391327381134,0.5186252593994141,0.5314978957176209,0.549511194229126,0.5381744503974915,0.5454447865486145,0.5254332423210144,0.503126323223114,0.5488735437393189,0.5313899517059326,0.5180251598358154,0.541047215461731,0.5486924052238464,0.5097309947013855,0.54029780626297,0.5217392444610596,0.5282256007194519,0.5328787565231323,0.511165976524353,0.5103088021278381,0.5034582018852234,0.5473848581314087,0.5124350786209106,0.5035026073455811,0.5407660007476807,0.518941342830658,0.5138011574745178,0.5047081112861633,0.5319151878356934,0.507381021976471,0.5478509068489075,0.5489534139633179,0.5190629363059998,0.5416772961616516,0.5350615978240967,0.5279072523117065,0.5197567343711853,0.544944167137146,0.5088012218475342,0.5148788690567017,0.501934826374054,0.5094361901283264,0.5403282046318054,0.539818286895752,0.5089261531829834,0.5215487480163574,0.5137917995452881,0.5143160820007324,0.534450113773346,0.5368176698684692,0.5012317299842835,0.5066034197807312,0.5476168394088745,0.5049194693565369,0.5375785231590271,0.5165521502494812,0.5179270505905151,0.544671356678009,0.5456531643867493,0.5006746649742127,0.5402721166610718,0.5190309882164002,0.5111672878265381,0.5471241474151611,0.5099340081214905,0.5100967884063721,0.5077232122421265,0.500694215297699,0.5475853681564331,0.5441077947616577,0.5218139290809631,0.5378192067146301,0.5242893695831299,0.51644366979599,0.5278229117393494,0.5415740609169006,0.5364999771118164,0.5166245698928833,0.5130243301391602,0.5266743898391724,0.5310615301132202,0.5033115148544312,0.5025829672813416,0.5144764184951782,0.5302092432975769,0.5293059349060059,0.5345542430877686,0.5079769492149353,0.5065687894821167,0.5165500044822693,0.5348842740058899,0.516813337802887,0.5081565976142883,0.5311264395713806,0.5424097180366516,0.5322638154029846,0.5333795547485352,0.5082587003707886,0.5338577628135681,0.5022469758987427,0.506035327911377,0.5273107886314392,0.548846423625946,0.5063222050666809,0.5003121495246887,0.5367872714996338,0.5148842334747315,0.5306894183158875,0.5157888531684876,0.5293334722518921,0.5223703384399414,0.5431892275810242,0.5024349689483643,0.5167352557182312,0.5495945811271668,0.5183027982711792,0.5356104969978333,0.504919171333313,0.5377373099327087,0.5121519565582275,0.5410662889480591,0.5189523696899414,0.5158696174621582,0.5374991893768311,0.5199436545372009,0.5280424952507019,0.5259531140327454,0.5387474894523621,0.5237745642662048,0.5205380916595459,0.5478401780128479,0.5169406533241272,0.5294816493988037,0.5289280414581299,0.524273693561554,0.5047630071640015,0.5143781304359436,0.5048421025276184,0.5358872413635254,0.5415394306182861,0.5311678647994995,0.5440504550933838,0.5262049436569214,0.5482355356216431,0.5329453349113464,0.51146399974823,0.5266415476799011,0.5024574995040894,0.5481956005096436,0.5161342620849609,0.5315026044845581,0.5134522318840027,0.5057944655418396,0.5362533926963806,0.5229840278625488,0.5471071004867554,0.5100083351135254,0.5441541075706482,0.546172559261322,0.5009501576423645,0.5154940485954285,0.5313098430633545,0.5340455174446106,0.5291502475738525,0.5022993087768555,0.5333346128463745,0.5324707627296448,0.5175164937973023,0.5008623003959656,0.5049830675125122,0.5252068638801575,0.508499026298523,0.5170119404792786,0.5451504588127136,0.5089030265808106,0.5261883139610291,0.5069676637649536,0.5218725800514221,0.5180989503860474,0.5013156533241272,0.5023395419120789,0.5473260879516602,0.5002251267433167,0.5462527275085449,0.5351284146308899,0.502828061580658,0.5406026244163513,0.5300121307373047,0.5127255320549011,0.5138362646102905,0.5374430418014526,0.5032468438148499,0.5429129600524902,0.5249490737915039,0.5268487334251404,0.5232506394386292,0.5088632702827454,0.5249055027961731,0.5078126192092896,0.5289577841758728,0.5441396832466126,0.52158522605896,0.5172181725502014,0.5159432888031006,0.5076960921287537,0.5170084834098816,0.5048396587371826,0.5114226341247559,0.5088769197463989,0.5323361754417419,0.5083417892456055,0.5492520928382874,0.532417356967926,0.5328697562217712,0.5282800197601318,0.5449284911155701,0.5134430527687073,0.5030514597892761,0.5031003952026367,0.520589292049408,0.5124703645706177,0.5214639902114868,0.5341395735740662,0.5300125479698181,0.540406346321106,0.5358307361602783,0.510624885559082,0.5336169004440308,0.5335485935211182,0.5380157232284546,0.5346742272377014,0.5234618186950684,0.5285853147506714,0.5390235781669617,0.5462961196899414,0.5482470989227295,0.5375953316688538,0.5439996123313904,0.5483897924423218,0.5383134484291077,0.5230481624603272,0.5272296667098999,0.5317449569702148,0.5306419730186462,0.5228039622306824,0.5071402192115784,0.5000421404838562,0.5438545346260071,0.5251133441925049,0.5212985277175903,0.5448522567749023,0.5032135844230652,0.5436177849769592,0.5014122724533081,0.5206370949745178,0.5156221985816956,0.5423492193222046,0.5483298301696777,0.5197489261627197,0.5446240901947022,0.5107302665710449,0.5070402026176453,0.5474305748939514,0.5354035496711731,0.5385740995407105,0.5416731238365173,0.5468156933784485,0.5397855639457703,0.5410846471786499,0.5104987621307373,0.5239284634590149,0.5412356853485107,0.5338563919067383,0.540928065776825,0.5226835608482361,0.5298601388931274,0.5078744292259216,0.5045125484466553,0.5498865246772766,0.5274057984352112,0.5045143961906433,0.5419442653656006,0.5002333521842957,0.5122599601745606,0.5405428409576416,0.5380560755729675,0.5313106775283814,0.5444508790969849,0.5331165790557861,0.5468213558197022,0.5385958552360535,0.5406470894813538,0.5247832536697388,0.5163540244102478,0.5304567813873291,0.5491580367088318,0.5084811449050903,0.513908863067627,0.5031519532203674,0.5249336361885071,0.5025390982627869,0.5008810162544251,0.5158306360244751,0.5045644640922546,0.5256766080856323,0.5078064203262329,0.5155325531959534,0.5312817692756653,0.522003710269928,0.5093616247177124,0.512188196182251,0.5299572944641113,0.5360211730003357,0.5493637323379517,0.5036185383796692,0.5321034789085388,0.5376204252243042,0.515770435333252,0.500535249710083,0.5008735060691834,0.54708331823349,0.5156802535057068,0.5015406608581543,0.5060610175132752,0.5100826025009155,0.5003321766853333,0.5181276798248291,0.5491002798080444,0.5226814150810242,0.5401057600975037,0.5496798753738403,0.5380663871765137,0.506333589553833,0.5495213270187378,0.5084713697433472,0.5126747488975525,0.5328837037086487,0.5122396945953369,0.5446670055389404,0.5192816853523254,0.5495668053627014,0.5060625076293945,0.5213221311569214,0.5358840227127075,0.5040086507797241,0.527931809425354,0.5393828749656677,0.547119140625,0.5192255973815918,0.5189303755760193,0.5126858353614807,0.5192651152610779,0.5186246037483215,0.5392816662788391,0.5429583787918091,0.5252407789230347,0.5010032653808594,0.54334956407547,0.5448184013366699,0.519605278968811,0.5155498385429382,0.5046387910842896,0.5207744240760803,0.5135586857795715,0.5368432402610779,0.5407946705818176,0.5362256169319153,0.5499415397644043,0.5398528575897217,0.5386029481887817,0.5444617867469788,0.5282350182533264,0.5249388217926025,0.5289902091026306,0.5116633772850037,0.5295609831809998,0.5428518652915955,0.5120236277580261,0.5419013500213623,0.5416818857192993,0.5197333693504334,0.5319108963012695,0.5021374821662903,0.5340007543563843,0.5321152806282044,0.5020004510879517,0.5472240447998047,0.5325613617897034,0.531920313835144,0.5297812819480896,0.5449038743972778,0.5450479984283447,0.521461546421051,0.5418830513954163,0.5008106231689453,0.5357856154441834,0.528442919254303,0.5090760588645935,0.5334683656692505,0.5007398128509522,0.530958890914917,0.5212711095809937,0.5492919683456421,0.5425167083740234,0.5324946045875549,0.5125197172164917,0.5175868272781372,0.5453632473945618,0.5369257926940918,0.5360140800476074,0.5455490350723267,0.5001667737960815,0.5235187411308289,0.5390869379043579,0.5032651424407959,0.5294554233551025,0.521930456161499,0.5382117033004761,0.5487125515937805,0.5123978853225708,0.537208616733551,0.5440023541450501,0.5027591586112976,0.5098034739494324,0.524791419506073,0.5362135171890259,0.5241634845733643,0.5391221642494202,0.515507698059082,0.5387405157089233,0.5345746874809265,0.5494445562362671,0.5405769348144531,0.5446191430091858,0.5435326099395752,0.5465017557144165,0.5066092610359192,0.5410260558128357,0.5234676003456116,0.5176656842231751,0.5206053853034973,0.5342782735824585,0.5347008109092712]"},{"name":"lines","type":"Lines"},{"name":"result","type":"Vec3","persistence":true,"default":"{\"x\":0,\"y\":0,\"z\":0}"},{"name":"speed","type":"Scalar","persistence":true,"default":"0.5501930713653565"},{"name":"time","type":"Scalar","persistence":true,"default":"3.791666746139526"},{"name":"u_root","type":"Color","persistence":true,"default":"{\"r\":0,\"g\":0,\"b\":0,\"a\":1}"},{"name":"u_shadingAmount","type":"Scalar","persistence":true,"default":"0"},{"name":"u_tangents","type":"Boolean","persistence":true,"default":"true"},{"name":"u_tip","type":"Color","persistence":true,"default":"{\"r\":1,\"g\":1,\"b\":1,\"a\":1}"},{"name":"u_vertexColorAmount","type":"Scalar","persistence":true,"default":"0"}],"dependencies":{},"bindings":[{"operator":{"name":"lineDrawOp","entry":"lineDrawOp","filename":"lineDrawOp.kl","kl":"require Math;\nrequire InlineDrawing;\nrequire Geometry;\n\nalias Float64 double;\nalias Integer int;\n\nfunction double fade(double t){ return t * t * t * (t * (t * 6 - 15) + 10); }\nfunction double lerp(double t, double a, double b){ return a + t * (b - a); }\nfunction double grad(int hash, double x, double y, double z) \n{\n    int     h = hash & 15;       /* CONVERT LO 4 BITS OF HASH CODE */\n    double  u = h < 8 ? x : y,   /* INTO 12 GRADIENT DIRECTIONS.   */\n        v = h < 4 ? y : h==12||h==14 ? x : z;\n    return ((h&1) == 0 ? u : -u) + ((h&2) == 0 ? v : -v);\n}\n\nfunction double pnoise (double ix, double iy, double iz)\n{\n    double x = ix;\n    double y = iy;\n    double z = iz;\n\n    const Scalar p[] = [\n      151 ,160 ,137 ,91  ,90  ,15  ,131 ,13  ,201 ,95  ,96  ,53  ,194 ,233 ,7 ,225 ,140 ,36  ,103 ,30  ,69  ,142 ,8 ,99  ,37  ,240 ,21  ,10  ,23  ,190 ,6 ,148 ,247 ,120 ,234 ,75  ,0 ,26  ,197 ,62  ,94  ,252 ,219 ,203 ,117 ,35  ,11  ,32  ,57  ,177 ,33  ,88  ,237 ,149 ,56  ,87  ,174 ,20  ,125 ,136 ,171 ,168 ,68  ,175 ,74  ,165 ,71  ,134 ,139 ,48  ,27  ,166 ,77  ,146 ,158 ,231 ,83  ,111 ,229 ,122 ,60  ,211 ,133 ,230 ,220 ,105 ,92  ,41  ,55  ,46  ,245 ,40  ,244 ,102 ,143 ,54  ,65  ,25  ,63  ,161 ,1 ,216 ,80  ,73  ,209 ,76  ,132 ,187 ,208 ,89  ,18  ,169 ,200 ,196 ,135 ,130 ,116 ,188 ,159 ,86  ,164 ,100 ,109 ,198 ,173 ,186 ,3 ,64  ,52  ,217 ,226 ,250 ,124 ,123 ,5 ,202 ,38  ,147 ,118 ,126 ,255 ,82  ,85  ,212 ,207 ,206 ,59  ,227 ,47  ,16  ,58  ,17  ,182 ,189 ,28  ,42  ,223 ,183 ,170 ,213 ,119 ,248 ,152 ,2 ,44  ,154 ,163 ,70  ,221 ,153 ,101 ,155 ,167 ,43  ,172 ,9 ,129 ,22  ,39  ,253 ,19  ,98  ,108 ,110 ,79  ,113 ,224 ,232 ,178 ,185 ,112 ,104 ,218 ,246 ,97  ,228 ,251 ,34  ,242 ,193 ,238 ,210 ,144 ,12  ,191 ,179 ,162 ,241 ,81  ,51  ,145 ,235 ,249 ,14  ,239 ,107 ,49  ,192 ,214 ,31  ,181 ,199 ,106 ,157 ,184 ,84  ,204 ,176 ,115 ,121 ,50  ,45  ,127 ,4 ,150 ,254 ,138 ,236 ,205 ,93  ,222 ,114 ,67  ,29  ,24  ,72  ,243 ,141 ,128 ,195 ,78  ,66  ,215 ,61  ,156 ,180 ,151 ,160 ,137 ,91  ,90  ,15  ,131 ,13  ,201 ,95  ,96  ,53  ,194 ,233 ,7 ,225 ,140 ,36  ,103 ,30  ,69  ,142 ,8 ,99  ,37  ,240 ,21  ,10  ,23  ,190 ,6 ,148 ,247 ,120 ,234 ,75  ,0 ,26  ,197 ,62  ,94  ,252 ,219 ,203 ,117 ,35  ,11  ,32  ,57  ,177 ,33  ,88  ,237 ,149 ,56  ,87  ,174 ,20  ,125 ,136 ,171 ,168 ,68  ,175 ,74  ,165 ,71  ,134 ,139 ,48  ,27  ,166 ,77  ,146 ,158 ,231 ,83  ,111 ,229 ,122 ,60  ,211 ,133 ,230 ,220 ,105 ,92  ,41  ,55  ,46  ,245 ,40  ,244 ,102 ,143 ,54  ,65  ,25  ,63  ,161 ,1 ,216 ,80  ,73  ,209 ,76  ,132 ,187 ,208 ,89  ,18  ,169 ,200 ,196 ,135 ,130 ,116 ,188 ,159 ,86  ,164 ,100 ,109 ,198 ,173 ,186 ,3 ,64  ,52  ,217 ,226 ,250 ,124 ,123 ,5 ,202 ,38  ,147 ,118 ,126 ,255 ,82  ,85  ,212 ,207 ,206 ,59  ,227 ,47  ,16  ,58  ,17  ,182 ,189 ,28  ,42  ,223 ,183 ,170 ,213 ,119 ,248 ,152 ,2 ,44  ,154 ,163 ,70  ,221 ,153 ,101 ,155 ,167 ,43  ,172 ,9 ,129 ,22  ,39  ,253 ,19  ,98  ,108 ,110 ,79  ,113 ,224 ,232 ,178 ,185 ,112 ,104 ,218 ,246 ,97  ,228 ,251 ,34  ,242 ,193 ,238 ,210 ,144 ,12  ,191 ,179 ,162 ,241 ,81  ,51  ,145 ,235 ,249 ,14  ,239 ,107 ,49  ,192 ,214 ,31  ,181 ,199 ,106 ,157 ,184 ,84  ,204 ,176 ,115 ,121 ,50  ,45  ,127 ,4 ,150 ,254 ,138 ,236 ,205 ,93  ,222 ,114 ,67  ,29  ,24  ,72  ,243 ,141 ,128 ,195 ,78  ,66  ,215 ,61  ,156 ,180\n    ];\n\n    int   X = int(floor(x)) & 255; /* FIND UNIT CUBE THAT */\n    int   Y = int(floor(y)) & 255; /* CONTAINS POINT.     */\n    int   Z = int(floor(z)) & 255;\n    x -= floor(x);                 /* FIND RELATIVE X,Y,Z */\n    y -= floor(y);                 /* OF POINT IN CUBE.   */\n    z -= floor(z);\n    double  u = fade(x);           /* COMPUTE FADE CURVES */\n    double  v = fade(y);           /* FOR EACH OF X,Y,Z.  */\n    double  w = fade(z);\n    int  A = p[X]+Y,\n     AA = p[A]+Z, \n     AB = p[A+1]+Z, /* HASH COORDINATES OF */\n     B = p[X+1]+Y, \n     BA = p[B]+Z, \n     BB = p[B+1]+Z; /* THE 8 CUBE CORNERS, */\n  \n    return\n     lerp(w,lerp(v,lerp(u, grad(p[AA  ], x, y, z),     /* AND ADD */\n                    grad(p[BA  ], x-1, y, z)),        /* BLENDED */\n            lerp(u, grad(p[AB  ], x, y-1, z),         /* RESULTS */\n                    grad(p[BB  ], x-1, y-1, z))),     /* FROM  8 */\n            lerp(v, lerp(u, grad(p[AA+1], x, y, z-1 ),/* CORNERS */\n                    grad(p[BA+1], x-1, y, z-1)),      /* OF CUBE */\n            lerp(u, grad(p[AB+1], x, y-1, z-1),\n                    grad(p[BB+1], x-1, y-1, z-1))));\n}\n\noperator simulateLines<<<index>>>(io Vec3 positions[], io Vec3 velocities[], Scalar ratios[], Size nbPointsPerLine, Scalar time, Scalar speed, Scalar frequency) {\n  if(index % nbPointsPerLine == 0)\n    return;\n    \n  Scalar t = time + mathRandomScalar(91, index / nbPointsPerLine) * 70.0;\n  t *= 0.01 * speed;\n  Vec3 pos = positions[index] * frequency;\n  Vec3 rndVel;\n  rndVel.x = Float32(pnoise(pos.x + t, pos.y, pos.z));\n  rndVel.y = 0.2 + Float32(pnoise(pos.x + t, pos.y, pos.z + 1000.0));\n  rndVel.z = Float32(pnoise(pos.x + t, pos.y + 1000.0, pos.z));\n  \n  rndVel *= ratios[index];\n  \n  velocities[index] = velocities[index].linearInterpolate(rndVel, 0.1);\n  positions[index] += velocities[index];\n}\n\noperator limitLines<<<index>>>(io Vec3 positions[], Size nbPointsPerLine, Scalar lengths[]) {\n  Size voffset = index * nbPointsPerLine;\n  for(Size i=1;i<nbPointsPerLine;i++) {\n    Vec3 diff = positions[voffset+1] - positions[voffset];\n    diff = diff.unit() * lengths[index];\n    positions[voffset+1] = positions[voffset] + diff;\n    voffset++;\n  }\n}\n\noperator computeTangents<<<index>>>(io Vec3 normals[], Vec3 positions[], Size nbPointsPerLine) {\n  if(index % nbPointsPerLine == 0)\n    normals[index] = positions[index+1] - positions[index];\n  else\n    normals[index] = positions[index] - positions[index-1];\n  normals[index].setUnit();\n}\n\noperator lineDrawOp(in Boolean forceRebuild, in Scalar frequency, io Scalar lineLengths[], io Lines lines, io Vec3 result, in Scalar speed, in Scalar time, in Color u_root, in Scalar u_shadingAmount, in Boolean u_tangents, in Color u_tip, in Scalar u_vertexColorAmount) {\n  \n  // eventually external parameters\n  Size nbLines = 1280;\n  Size nbSegments = 80;\n\n  InlineDrawing draw = OGLInlineDrawing_GetInstance();\n    \n  // define all attributes\n  GeometryAttributes attributes = lines.getAttributes();\n  Vec3Attribute positions = attributes.getOrCreateAttribute('positions', Vec3Attribute);\n  Vec3Attribute normals = attributes.getOrCreateAttribute('normals', Vec3Attribute);\n  Vec3Attribute velocities = attributes.getOrCreateAttribute('velocities', Vec3Attribute);\n  ColorAttribute vertexColors = attributes.getOrCreateAttribute('vertexColors', ColorAttribute);\n  ScalarAttribute ratios = attributes.getOrCreateAttribute('ratios', ScalarAttribute);\n  \n  // update topology\n  Size nbPointsPerLine = nbSegments + 1;\n  if(forceRebuild || time == 0.0 || lines.indices.size() != nbLines * nbSegments * 2 || lineLengths.size() != nbLines) {\n    lines.clear();\n    lines.indices.resize(nbLines * nbSegments * 2);\n    lines.addPoints(nbLines * nbPointsPerLine);\n    lineLengths.resize(nbLines);\n\n    attributes = lines.getAttributes();\n    positions = attributes.getOrCreateAttribute('positions', Vec3Attribute);\n    normals = attributes.getOrCreateAttribute('normals', Vec3Attribute);\n    vertexColors = attributes.getOrCreateAttribute('vertexColors', ColorAttribute);\n    ratios = attributes.getOrCreateAttribute('ratios', ScalarAttribute);\n    \n    Size offset = 0;\n    Size voffset = 0;\n    for(Size i=0;i<nbLines;i++) {\n      for(Size j=0;j<nbSegments;j++) {\n        lines.indices[offset++] = voffset++;\n        lines.indices[offset++] = voffset;\n      }\n      voffset++;\n    }\n    \n    voffset = 0;\n    for(Size i=0;i<nbLines;i++) {\n      lineLengths[i] = (1.0 + mathRandomScalar(20, i * 20) * 0.1) * 0.5;\n      for(Size j=0;j<nbPointsPerLine;j++) {\n        positions.values[voffset].x = 1.0 - mathRandomScalar(17, i) * 2.0;\n        positions.values[voffset].y = lineLengths[i] * Scalar(j);\n        positions.values[voffset].z = 1.0 - mathRandomScalar(19, i * 8) * 2.0;\n        ratios.values[voffset] = Scalar(j) / Scalar(nbSegments);\n        Color a(1.0, 0.0, 0.0);\n        Color b(0.0, 0.0, 1.0);\n        vertexColors.values[voffset] = a.linearInterpolate(b, mathRandomScalar(21, i * 12));\n        voffset++;\n      }\n    }\n    \n    lines.incrementVersion();\n\n    vertexColors.incrementVersion();\n    ratios.incrementVersion();\n\n    draw.reset();\n\n    InlineShader shader = draw.registerShader(OGLLinesShader());\n    InlineMaterial mat = shader.getOrCreateMaterial('mat');\n    InlineShape shape = draw.getShape('lines');\n    if(shape == null)\n      shape = draw.registerShape(InlineLinesShape('lines', lines));\n    \n    InlineTransform root = draw.getRoot();\n    InlineTransform transform = root.addChild(StaticInlineTransform('lines', Xfo()));\n    InlineInstance instance = mat.addInstance(SimpleInlineInstance('lines', transform, shape));\n\n  } else {\n    simulateLines<<<lines.pointCount()>>>(positions.values, velocities.values, ratios.values, nbPointsPerLine, time, speed, frequency);\n    limitLines<<<nbLines>>>(positions.values, nbPointsPerLine, lineLengths);\n  }\n  computeTangents<<<lines.pointCount()>>>(normals.values, positions.values, nbPointsPerLine);\n  \n  positions.incrementVersion();\n  normals.incrementVersion();\n\n  InlineShader shader = draw.getShader('OGLLinesShader');\n  InlineMaterial mat = shader.getOrCreateMaterial('mat');\n  mat.setUniform('u_normalIsTangent', u_tangents ? 1 : 0);\n  mat.setUniform('u_shadingAmount', u_shadingAmount);\n  mat.setUniform('u_vertexColorAmount', u_vertexColorAmount);\n  mat.setUniform('u_rootColor', u_root);\n  mat.setUniform('u_tipColor', u_tip);\n}\n","portmap":{}}}]}],"extensions":[],"ports":[{"name":"forceRebuild","node":"DGNode","graph":"mayaGraph","type":"Boolean","autoInitObjects":true,"member":"forceRebuild","mode":"in"},{"name":"frequency","node":"DGNode","graph":"mayaGraph","type":"Scalar","autoInitObjects":true,"member":"frequency","mode":"in"},{"name":"lineLengths","node":"DGNode","graph":"mayaGraph","type":"Scalar[]","autoInitObjects":true,"member":"lineLengths","mode":"io"},{"name":"lines","node":"DGNode","graph":"mayaGraph","type":"Lines","autoInitObjects":true,"member":"lines","mode":"io"},{"name":"result","node":"DGNode","graph":"mayaGraph","type":"Vec3","autoInitObjects":true,"member":"result","mode":"out"},{"name":"speed","node":"DGNode","graph":"mayaGraph","type":"Scalar","autoInitObjects":true,"member":"speed","mode":"in"},{"name":"time","node":"DGNode","graph":"mayaGraph","type":"Scalar","autoInitObjects":true,"member":"time","mode":"in"},{"name":"u_root","node":"DGNode","graph":"mayaGraph","type":"Color","autoInitObjects":true,"member":"u_root","mode":"in"},{"name":"u_shadingAmount","node":"DGNode","graph":"mayaGraph","type":"Scalar","autoInitObjects":true,"member":"u_shadingAmount","mode":"in"},{"name":"u_tangents","node":"DGNode","graph":"mayaGraph","type":"Boolean","autoInitObjects":true,"member":"u_tangents","mode":"in"},{"name":"u_tip","node":"DGNode","graph":"mayaGraph","type":"Color","autoInitObjects":true,"member":"u_tip","mode":"in"},{"name":"u_vertexColorAmount","node":"DGNode","graph":"mayaGraph","type":"Scalar","autoInitObjects":true,"member":"u_vertexColorAmount","mode":"in"}]}