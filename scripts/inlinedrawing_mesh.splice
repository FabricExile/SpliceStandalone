{"version":"1012000","info":{"hostAppName":"Maya","hostAppVersion":"2014 x64"},"nodes":[{"name":"DGNode","members":[{"name":"result","type":"Vec3","persistence":true,"default":"{\"x\":0,\"y\":0,\"z\":0}"}],"dependencies":{},"bindings":[{"operator":{"name":"drawMeshes","entry":"drawMeshes","filename":"drawMeshes.kl","kl":"require Math;\nrequire InlineDrawing;\n\noperator drawMeshes(io Vec3 result) {\n\n  InlineDrawing draw = OGLInlineDrawing_GetInstance();\n  \n  if(draw.getShapeCount() != 2) {\n    PolygonMesh cube = PolygonMesh();\n    cube.addCuboid(Xfo(), 2, 2, 2, true, true);\n    draw.registerShape(InlineMeshShape('cube', cube));\n    PolygonMesh sphere = PolygonMesh();\n    sphere.addSphere(Xfo(), 1.0, 16, true, true);\n    draw.registerShape(InlineMeshShape('sphere', sphere));\n\n    InlineShader phong = draw.registerShader(OGLSurfaceShader());\n    InlineMaterial mat = phong.getOrCreateMaterial('mat');\n  \n    InlineTransform rootTfo = draw.getRoot();\n    InlineTransform cubeTfo = rootTfo.addChild(StaticInlineTransform('cubesXfo'));\n    InlineTransform sphereTfo = rootTfo.addChild(StaticInlineTransform('spheresXfo'));\n\n    InlineInstance cubeInstance = mat.addInstance(SimpleInlineInstance('cubeInst', cubeTfo, draw.getShape('cube')));\n    InlineInstance sphereInstance = mat.addInstance(SimpleInlineInstance('sphereInst', sphereTfo, draw.getShape('sphere')));\n  }\n\n  InlineTransform rootTfo = draw.getRoot();\n  InlineTransform cubeTfo = rootTfo.getChild('cubesXfo');\n  InlineTransform sphereTfo = rootTfo.getChild('spheresXfo');\n  InlineInstance cubeInstance = cubeTfo.getChild('cubeInst');\n  InlineInstance sphereInstance = sphereTfo.getChild('sphereInst');\n  \n  Size count = 50;\n  cubeTfo.setLocalCount(count);\n  sphereTfo.setLocalCount(count);\n  \n  \n  for(Size i=0;i<count;i++) {\n    cubeTfo.setLocalXfo(i, Xfo(Vec3(-1.5, i * 3, 0)));\n    sphereTfo.setLocalXfo(i, Xfo(Vec3(1.5, i * 3, 0)));\n    \n    Color color1, color2;\n    color1.r = mathRandomScalar(17, i * 2) * 0.75 + 0.25;\n    color1.g = mathRandomScalar(18, i * 3) * 0.75 + 0.25;\n    color1.b = mathRandomScalar(19, i * 4) * 0.75 + 0.25;\n    color2.r = mathRandomScalar(20, i * 5) * 0.75 + 0.25;\n    color2.g = mathRandomScalar(21, i * 6) * 0.75 + 0.25;\n    color2.b = mathRandomScalar(22, i * 7) * 0.75 + 0.25;\n    \n    cubeInstance.setTransformUniform(InlineUniform('u_diffuseColor', color1), i);\n    sphereInstance.setTransformUniform(InlineUniform('u_diffuseColor', color2), i);\n  }\n}","portmap":{}}}]}],"extensions":[],"ports":[{"name":"result","node":"DGNode","graph":"mayaGraph","type":"Vec3","autoInitObjects":true,"member":"result","mode":"io"}]}